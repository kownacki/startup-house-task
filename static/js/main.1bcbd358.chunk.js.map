{"version":3,"sources":["constants.ts","redux/selectors.ts","utils/alphavantage.ts","components/Details/DetailsMain.tsx","components/Details/Details.tsx","components/Header.tsx","redux/actionTypes.ts","redux/actions.ts","components/Portfolio/CompaniesList/CompaniesListItem.tsx","components/Portfolio/CompaniesList/CompaniesList.tsx","components/common/Heading.tsx","components/Portfolio/Portfolio.tsx","components/Search/SearchInput.tsx","components/Search/SearchResult/SearchResultItem.tsx","components/Search/SearchResult/SearchResult.tsx","components/Search/Search.tsx","components/Landing.tsx","components/App.tsx","redux/store.ts","index.tsx"],"names":["ROOT_PATH","DETAILS_PATH","ALPHAVANTAGE_API_URL","RWD_BREAKPOINTS","selectQuery","state","query","selectSearchResult","searchResult","selectPortfolio","portfolio","usePortfolio","useSelector","parseSearchBestMatchesItem","bestMatchesItem","symbol","name","getCompaniesFromSearchResponse","response","json","bestMatches","map","search","fetch","status","companies","isSuccess","getDetailsFromOverviewResponse","address","responseJson","Address","description","Description","marketCapitalization","MarketCapitalization","overview","details","Root","styled","div","Name","h2","SmallDetailsContainer","SmallDetailsContainerLabel","span","DescriptionContainer","DetailsMain","company","ButtonContainer","Details","companyIndex","useParams","useState","loading","setLoading","setDetails","length","Number","getCompany","getOverview","useCallback","result","useEffect","Button","variant","component","Link","to","CircularProgress","header","Container","Header","SET_QUERY","SET_SEARCH_RESULT","ADD_TO_PORTFOLIO","REMOVE_FROM_PORTFOLIO","setSearchResult","payload","type","StyledListItem","ListItem","CompaniesListItem","index","onRemove","disablePadding","disableGutters","secondaryAction","IconButton","onClick","ListItemButton","ListItemText","primary","CompaniesList","dispatch","useDispatch","handleRemoveFromPortfolio","List","Heading","children","Portfolio","SearchInput","searchInputText","setSearchInputText","searchCompanies","debounce","TextField","id","label","InputProps","startAdornment","InputAdornment","position","onChange","event","currentTarget","value","SearchResultItem","onAdd","SearchResult","handleAddToPortfolio","find","portfolioCompany","alert","SearchInputContainer","Search","StyledDivider","Divider","SectionContainer","Landing","orientation","flexItem","Main","App","path","element","appReducer","createReducer","resp","newPortfolio","splice","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1bcbd358.chunk.js","sourcesContent":["export const ROOT_PATH = '/startup-house-task/';\r\nexport const DETAILS_PATH = `${ROOT_PATH}details`;\r\n\r\nexport const HEADER_HEIGHT = 60;\r\nexport const MAIN_WIDTH = 1000;\r\n\r\nexport const ALPHAVANTAGE_API_URL = 'https://www.alphavantage.co/';\r\n\r\nexport const RWD_BREAKPOINTS = {\r\n  1: 959,\r\n  2: 839,\r\n  3: 599,\r\n};\r\n\r\nexport const COLORS = {\r\n  lightGrey: '#F2F2F2',\r\n};\r\n","import { useSelector } from 'react-redux';\nimport { RootState } from './store';\n\nconst selectQuery = (state: RootState) => state.query;\nexport const useQuery = () => useSelector(selectQuery);\n\nconst selectSearchResult = (state: RootState) => state.searchResult;\nexport const useSearchResult = () => useSelector(selectSearchResult);\n\nconst selectPortfolio = (state: RootState) => state.portfolio;\nexport const usePortfolio = () => useSelector(selectPortfolio);\n","import { ALPHAVANTAGE_API_URL} from '../constants';\nimport { Company, CompanyDetails } from '../types';\nimport { OverviewResponseJson, SearchBestMatchesItem, SearchResponseJson, SearchResult, OverviewResult} from './alphavantageTypes';\n\nconst parseSearchBestMatchesItem = (bestMatchesItem: SearchBestMatchesItem): Company => {\n  return {\n    symbol: bestMatchesItem['1. symbol'],\n    name: bestMatchesItem['2. name'],\n  };\n};\n\nconst parseSearchResponseJson = (responseJson: SearchResponseJson): Company[] => {\n  return responseJson.bestMatches.map(parseSearchBestMatchesItem) ;\n};\n\nconst getCompaniesFromSearchResponse = async (response: Response): Promise<Company[]> => {\n  const json = await response.json() as SearchResponseJson;\n  return parseSearchResponseJson(json);\n};\n\nexport const search = async (query: string): Promise<SearchResult> => {\n  // todo use env\n  const response = await fetch(`${ALPHAVANTAGE_API_URL}query?function=SYMBOL_SEARCH&keywords=${query}&apikey=${'5UID986T5QBYBMON'}`);\n  return response.status === 200\n    ? {companies: await getCompaniesFromSearchResponse(response), isSuccess: true}\n    : {isSuccess: false}\n};\n\nconst parseOverviewResponseJson = (responseJson: OverviewResponseJson): CompanyDetails => {\n  return {\n    address: responseJson.Address,\n    description: responseJson.Description,\n    marketCapitalization: responseJson.MarketCapitalization,\n  };\n};\n\nconst getDetailsFromOverviewResponse = async (response: Response): Promise<CompanyDetails> => {\n  const json = await response.json() as OverviewResponseJson;\n  return parseOverviewResponseJson(json);\n};\n\nexport const overview = async (symbol: string): Promise<OverviewResult> => {\n  // todo use env\n  const response = await fetch(`${ALPHAVANTAGE_API_URL}query?function=OVERVIEW&symbol=${symbol}&apikey=${'5UID986T5QBYBMON'}`);\n  return response.status === 200\n    ? {details: await getDetailsFromOverviewResponse(response), isSuccess: true}\n    : {isSuccess: false}\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport { Company, CompanyDetails } from '../../types';\n\nconst Root = styled.div`\n`;\n\nconst Name = styled.h2`\n`;\n\nconst SmallDetailsContainer = styled.div`\n`;\n\nconst SmallDetailsContainerLabel = styled.span`\n  font-weight: 700;\n  margin-right: 5px;\n`;\n\nconst DescriptionContainer = styled.div`\n  margin: 20px 0;\n`;\n\ninterface DetailsMainProps {\n  company: Company,\n  details: CompanyDetails,\n}\n\nexport const DetailsMain: FC<DetailsMainProps> = ({ company, details }) => {\n  return (\n    <Root>\n      <Name>\n        {company.name}\n      </Name>\n      <SmallDetailsContainer>\n        <SmallDetailsContainerLabel>\n          Address:\n        </SmallDetailsContainerLabel>\n        {details.address}\n      </SmallDetailsContainer>\n      <SmallDetailsContainer>\n        <SmallDetailsContainerLabel>\n          Market Capitalization:\n        </SmallDetailsContainerLabel>\n        {details.marketCapitalization}\n      </SmallDetailsContainer>\n      <DescriptionContainer>\n        {details.description}\n      </DescriptionContainer>\n    </Root>\n  );\n};\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Link, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ROOT_PATH } from '../../constants';\nimport { usePortfolio } from '../../redux/selectors';\nimport { Company, CompanyDetails } from '../../types';\nimport { overview } from '../../utils/alphavantage';\nimport { DetailsMain } from './DetailsMain';\n\ntype DetailsParams = {\n  companyIndex: string,\n};\n\nconst Root = styled.div`\n  margin-top: 30px;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst getCompany = (portfolio: Company[], companyIndex?: string) => {\n  if (companyIndex && portfolio.length > 0) {\n    return portfolio[Number(companyIndex)];\n  }\n  return undefined;\n};\n\nexport const Details: FC = () => {\n  const { companyIndex } = useParams<DetailsParams>();\n  const portfolio = usePortfolio();\n  const [loading, setLoading] = useState(true);\n  const [details, setDetails] = useState<CompanyDetails>();\n\n  const company = getCompany(portfolio, companyIndex);\n\n  const getOverview = useCallback(async (symbol: string) => {\n    setLoading(true);\n    const result = await overview(symbol);\n    if (result.isSuccess) {\n      setDetails(result.details);\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (company) {\n      getOverview(company.symbol);\n    }\n  }, [company, getOverview]);\n\n  return (\n    <Root>\n      <ButtonContainer>\n        <Button variant=\"contained\" component={Link} to={ROOT_PATH}>\n          Go Back\n        </Button>\n      </ButtonContainer>\n      {loading && (\n        <CircularProgress />\n      )}\n      {!loading && (\n        <DetailsMain\n          company={company as Company}\n          details={details as CompanyDetails}\n        />\n      )}\n    </Root>\n  );\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport { HEADER_HEIGHT, MAIN_WIDTH, RWD_BREAKPOINTS } from '../constants';\n\nconst Root = styled.header`\n  border-bottom: solid 1px black;\n  font-size: 30px;\n  font-family: monospace;\n  height: ${HEADER_HEIGHT}px;\n  line-height: ${HEADER_HEIGHT}px;\n\n  @media (max-width: ${RWD_BREAKPOINTS[3]}px) {\n    font-size: 20px;\n  }\n`;\n\nconst Container = styled.div`\n  max-width: ${MAIN_WIDTH}px;\n  padding: 0 20px;\n  margin: auto;\n`;\n\nexport const Header: FC = () => {\n  return (\n    <Root>\n      <Container>\n        SDH Frontend Homework\n      </Container>\n    </Root>\n  );\n};\n","export const SET_QUERY = 'SET_QUERY';\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT';\n\nexport const ADD_TO_PORTFOLIO = 'ADD_TO_PORTFOLIO';\nexport const REMOVE_FROM_PORTFOLIO = 'REMOVE_FROM_PORTFOLIO';\n","import { SET_QUERY, SET_SEARCH_RESULT, ADD_TO_PORTFOLIO, REMOVE_FROM_PORTFOLIO } from './actionTypes';\nimport { Company } from '../types';\n\nexport const setQuery = (payload: string) => ({ type: SET_QUERY, payload });\nexport const setSearchResult = (payload: Company[]) => ({ type: SET_SEARCH_RESULT, payload });\n\nexport const addToPortfolio = (payload: Company) => ({ type: ADD_TO_PORTFOLIO, payload });\nexport const removeFromPortfolio = (payload: { index: number }) => ({ type: REMOVE_FROM_PORTFOLIO, payload });\n","import React, { FC } from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { COLORS, DETAILS_PATH } from '../../../constants';\r\nimport { Company } from '../../../types';\r\n\r\nexport interface CompaniesListItemProps {\r\n  company: Company,\r\n  index: number,\r\n  onRemove: () => void,\r\n}\r\n\r\nconst StyledListItem = styled(ListItem)`\r\n  background: ${COLORS.lightGrey};\r\n`;\r\n\r\nexport const CompaniesListItem: FC<CompaniesListItemProps> = ({ company, index, onRemove }) => {\r\n  return (\r\n    <StyledListItem\r\n      disablePadding\r\n      disableGutters\r\n      secondaryAction={\r\n        <IconButton\r\n          aria-label=\"remove\"\r\n          onClick={() => onRemove()}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      }\r\n    >\r\n      <ListItemButton component={Link} to={`${DETAILS_PATH}/${index}`}>\r\n        <ListItemText primary={`${company.symbol} - ${company.name}`} />\r\n      </ListItemButton>\r\n    </StyledListItem>\r\n  );\r\n};\r\n","import React, { FC, useCallback } from 'react';\r\nimport List from '@mui/material/List';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { removeFromPortfolio } from '../../../redux/actions';\r\nimport { usePortfolio } from '../../../redux/selectors';\r\nimport { CompaniesListItem } from './CompaniesListItem';\r\n\r\nconst Root = styled.div`\r\n`;\r\n\r\nexport const CompaniesList: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const portfolio = usePortfolio();\r\n\r\n  const handleRemoveFromPortfolio = useCallback((index: number) => {\r\n    dispatch(removeFromPortfolio({ index }));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Root>\r\n      <List>\r\n        {\r\n          portfolio.length === 0 && (\r\n            <div>No items in portfolio</div>\r\n          )\r\n        }\r\n        {portfolio.map((company, index) => (\r\n          <CompaniesListItem\r\n            key={company.symbol}\r\n            company={company}\r\n            index={index}\r\n            onRemove={() => handleRemoveFromPortfolio(index)}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Root>\r\n  );\r\n};\r\n","import React, { FC, ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Root = styled.div`\r\n  font-size: 20px;\r\n`;\r\n\r\ninterface HeadingProps {\r\n  children?: ReactNode,\r\n}\r\n\r\nexport const Heading: FC<HeadingProps> = ({ children}) => {\r\n  return (\r\n    <Root>\r\n      {children}\r\n    </Root>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { CompaniesList } from './CompaniesList';\r\nimport { Heading } from '../common/Heading';\r\n\r\nconst Root = styled.div`\r\n`;\r\n\r\nexport const Portfolio: FC = () => {\r\n  return (\r\n    <Root>\r\n      <Heading>\r\n        Your Portfolio\r\n      </Heading>\r\n      <CompaniesList></CompaniesList>\r\n    </Root>\r\n  );\r\n};\r\n","import React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport { debounce } from 'lodash';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { setQuery, setSearchResult } from '../../redux/actions';\r\nimport { search } from '../../utils/alphavantage';\r\nimport { Company } from '../../types';\r\n\r\nconst Root = styled.div`\r\n`;\r\n\r\nexport const SearchInput: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [searchInputText, setSearchInputText] = useState('');\r\n\r\n  const searchCompanies = useCallback(debounce(async (query: string) => {\r\n    dispatch(setQuery(query));\r\n    if (query) {\r\n      const result = await search(query);\r\n      if (result.isSuccess) {\r\n        dispatch(setSearchResult(result.companies as Company[]));\r\n      }\r\n    }\r\n  }, 300), [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (searchInputText) {\r\n      searchCompanies(searchInputText);\r\n    }\r\n  }, [searchCompanies, searchInputText]);\r\n\r\n  return (\r\n    <Root>\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        label=\"Company Name\"\r\n        variant=\"outlined\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => setSearchInputText(event.currentTarget.value)}\r\n      />\r\n    </Root>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { Company } from '../../../types';\r\n\r\nexport interface SearchResultItemProps {\r\n  company: Company,\r\n  onAdd: () => void,\r\n}\r\n\r\nexport const SearchResultItem: FC<SearchResultItemProps> = ({ company, onAdd }) => {\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      secondaryAction={\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          onClick={() => onAdd()}\r\n        >\r\n          <AddIcon />\r\n        </IconButton>\r\n      }\r\n    >\r\n      <ListItemText primary={`${company.symbol} - ${company.name}`} />\r\n    </ListItem>\r\n  );\r\n};\r\n","import React, { FC, useCallback } from 'react';\r\nimport List from '@mui/material/List';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { addToPortfolio } from '../../../redux/actions';\r\nimport { usePortfolio, useQuery, useSearchResult } from '../../../redux/selectors';\r\nimport { Company } from '../../../types';\r\nimport { SearchResultItem } from './SearchResultItem';\r\nimport { Heading } from '../../common/Heading';\r\n\r\nconst Root = styled.div`\r\n`;\r\n\r\nexport const SearchResult: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const query = useQuery();\r\n  const portfolio = usePortfolio();\r\n  const searchResult = useSearchResult();\r\n\r\n  const handleAddToPortfolio = useCallback((company: Company) => {\r\n    if (!portfolio.find((portfolioCompany) => portfolioCompany.symbol === company.symbol)) {\r\n      dispatch(addToPortfolio(company));\r\n    } else {\r\n      alert('You cannot add the same company twice to your portfolio');\r\n    }\r\n  }, [dispatch, portfolio]);\r\n\r\n  return (\r\n    <Root>\r\n      {query && (\r\n        <Heading>\r\n          Search Results\r\n        </Heading>\r\n      )}\r\n      <List>\r\n        {searchResult.map((company) => (\r\n          <SearchResultItem\r\n            key={company.symbol}\r\n            company={company}\r\n            onAdd={() => handleAddToPortfolio(company)}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Root>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { SearchInput } from './SearchInput';\r\nimport { SearchResult } from './SearchResult';\r\n\r\nconst Root = styled.div`\r\n`;\r\n\r\nconst SearchInputContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Search: FC = () => {\r\n  return (\r\n    <Root>\r\n      <SearchInputContainer>\r\n        <SearchInput />\r\n      </SearchInputContainer>\r\n      <SearchResult />\r\n    </Root>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\nimport Divider from '@mui/material/Divider';\nimport styled from 'styled-components';\nimport { RWD_BREAKPOINTS } from '../constants';\nimport { Portfolio } from './Portfolio';\nimport { Search } from './Search';\n\nconst StyledDivider = styled(Divider)`\n`;\n\nconst Root = styled.div`\n  margin-top: 30px;\n  display: flex;\n  \n  ${StyledDivider}[orientation=\"horizontal\"] {\n    display: none;\n  }\n\n  @media (max-width: ${RWD_BREAKPOINTS[2]}px) {\n    flex-direction: column;\n    ${StyledDivider}[orientation=\"vertical\"] {\n      display: none;\n    }\n    ${StyledDivider}[orientation=\"horizontal\"] {\n      display: block;\n    }\n  }\n`;\n\nconst SectionContainer = styled.div`\n  padding: 0 20px;\n  flex: 1;\n\n  @media (max-width: ${RWD_BREAKPOINTS[2]}px) {\n    padding: 20px 0;\n  }\n`;\n\nexport const Landing: FC = () => {\n  return (\n    <Root>\n      <SectionContainer>\n        <Search />\n      </SectionContainer>\n      <StyledDivider orientation=\"horizontal\" flexItem />\n      <StyledDivider orientation=\"vertical\" flexItem />\n      <SectionContainer>\n        <Portfolio />\n      </SectionContainer>\n    </Root>\n  );\n};\n","import React, { FC } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ROOT_PATH, DETAILS_PATH, MAIN_WIDTH } from '../constants';\nimport { Details } from './Details';\nimport { Header } from './Header';\nimport { Landing } from './Landing';\n\nconst Root = styled.div`\n`;\n\nconst Main = styled.div`\n  max-width: ${MAIN_WIDTH}px;\n  padding: 0 20px;\n  margin: 0 auto;\n`;\n\nexport const App: FC = () => {\n  return (\n    <Root>\n      <Header />\n      <Main>\n        <Routes>\n          <Route path={ROOT_PATH} element={<Landing />} />\n          <Route path={`${DETAILS_PATH}/:companyIndex`} element={<Details />} />\n        </Routes>\n      </Main>\n    </Root>\n  );\n};\n","import {createStore, applyMiddleware} from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport thunkMiddleware from 'redux-thunk'\nimport { SET_QUERY, SET_SEARCH_RESULT, ADD_TO_PORTFOLIO, REMOVE_FROM_PORTFOLIO } from './actionTypes';\nimport { Company } from '../types';\n\nexport interface StoreState {\n  query?: string,\n  searchResult: Company[],\n  portfolio: Company[],\n}\n\nconst initialState: StoreState  = {\n  searchResult: [],\n  portfolio: [],\n};\n\nexport const appReducer = createReducer(\n  initialState,\n  {\n    [SET_QUERY]: (\n      state: StoreState,\n      resp: {\n        payload: string,\n      }\n    ) => {\n      return {\n        ...state,\n        query: resp.payload,\n      };\n    },\n    [SET_SEARCH_RESULT]: (\n      state: StoreState,\n      resp: {\n        payload: Company[],\n      }\n    ) => {\n      return {\n        ...state,\n        searchResult: resp.payload,\n      };\n    },\n    [ADD_TO_PORTFOLIO]: (\n      state: StoreState,\n      resp: {\n        payload: Company,\n      }\n    ) => {\n      return {\n        ...state,\n        portfolio: [...state.portfolio, resp.payload],\n      };\n    },\n    [REMOVE_FROM_PORTFOLIO]: (\n      state: StoreState,\n      resp: {\n        payload: { index: number },\n      }\n    ) => {\n      const newPortfolio = [...state.portfolio];\n      newPortfolio.splice(resp.payload.index, 1);\n      return {\n        ...state,\n        portfolio: newPortfolio,\n      };\n    },\n  },\n);\n\n// todo use configureStore\nexport const store = createStore(\n  appReducer,\n  applyMiddleware(thunkMiddleware),\n);\n\nexport type RootState = ReturnType<typeof appReducer>\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport {Provider} from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport { store } from './redux/store';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}