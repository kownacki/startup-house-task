{"version":3,"sources":["constants.ts","redux/actionTypes.ts","redux/reducer.ts","redux/store.ts","redux/selectors.ts","utils/alphavantage.ts","utils/general.ts","components/Details/DetailsMain.tsx","components/Details/Details.tsx","components/Header.tsx","redux/actions.ts","components/Portfolio/CompaniesList/CompaniesListItem.tsx","components/Portfolio/CompaniesList/CompaniesList.tsx","components/common/Heading.tsx","components/Portfolio/Portfolio.tsx","components/Search/SearchInput.tsx","components/Search/SearchResult/SearchResultItem.tsx","components/Search/SearchResult/SearchResult.tsx","components/Search/Search.tsx","components/Landing.tsx","components/App.tsx","index.tsx"],"names":["ROOT_PATH","DETAILS_PATH","RWD_BREAKPOINTS","SET_QUERY","SET_SEARCH_RESULT","ADD_TO_PORTFOLIO","REMOVE_FROM_PORTFOLIO","reducer","createReducer","searchResult","portfolio","state","resp","query","payload","newPortfolio","splice","index","store","createStore","applyMiddleware","thunkMiddleware","selectQuery","selectSearchResult","selectPortfolio","usePortfolio","useSelector","createApiQueryUrl","fun","queryArgName","process","ALPHAVANTAGE_API_KEY","parseSearchBestMatchesItem","bestMatchesItem","symbol","name","getCompaniesFromSearchResponse","response","json","bestMatches","map","search","fetch","status","companies","isSuccess","getDetailsFromOverviewResponse","address","responseJson","Address","description","Description","marketCapitalization","MarketCapitalization","overview","details","BIL","MIL","Root","styled","div","Name","h2","SmallDetailsContainer","SmallDetailsContainerLabel","span","DescriptionContainer","DetailsMain","value","company","Number","Math","floor","String","ButtonContainer","Details","companyIndex","useParams","useState","loading","setLoading","setDetails","length","getCompany","getOverview","useCallback","result","alert","useEffect","Button","variant","component","Link","to","CircularProgress","header","Container","Header","setSearchResult","type","StyledListItem","ListItem","CompaniesListItem","onRemove","disablePadding","disableGutters","secondaryAction","IconButton","onClick","ListItemButton","ListItemText","primary","CompaniesList","dispatch","useDispatch","handleRemoveFromPortfolio","List","Heading","children","Portfolio","SearchInput","searchInputText","setSearchInputText","searchCompanies","debounce","TextField","id","label","InputProps","startAdornment","InputAdornment","position","onChange","event","currentTarget","SearchResultItem","onAdd","SearchResult","handleAddToPortfolio","find","portfolioCompany","portfolioIncludesCompany","SearchInputContainer","Search","StyledDivider","Divider","SectionContainer","Landing","orientation","flexItem","Main","App","path","element","dotenv","config","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"gTAAaA,EAAY,uBACZC,EAAY,UAAMD,EAAN,WAOZE,EAER,IAFQA,EAGR,I,+CCXQC,EAAY,YACZC,EAAoB,oBAEpBC,EAAmB,mBACnBC,EAAwB,wBCWxBC,EAAUC,YALiB,CACtCC,aAAc,GACdC,UAAW,KAGuB,mBAG/BP,GAAY,SACXQ,EACAC,GAIA,OAAO,2BACFD,GADL,IAEEE,MAAOD,EAAKE,aAXgB,cAc/BV,GAAoB,SACnBO,EACAC,GAIA,OAAO,2BACFD,GADL,IAEEF,aAAcG,EAAKE,aAtBS,cAyB/BT,GAAmB,SAClBM,EACAC,GAIA,OAAO,2BACFD,GADL,IAEED,UAAU,GAAD,mBAAMC,EAAMD,WAAZ,CAAuBE,EAAKE,eAjCT,cAoC/BR,GAAwB,SACvBK,EACAC,GAIA,IAAMG,EAAY,YAAOJ,EAAMD,WAE/B,OADAK,EAAaC,OAAOJ,EAAKE,QAAQG,MAAO,GACjC,2BACFN,GADL,IAEED,UAAWK,OA9CiB,ICVvBG,EAAQC,YACnBZ,EACAa,YAAgBC,M,6CCJZC,GAAc,SAACX,GAAD,OAAsBA,EAAME,OAG1CU,GAAqB,SAACZ,GAAD,OAAsBA,EAAMF,cAGjDe,GAAkB,SAACb,GAAD,OAAsBA,EAAMD,WACvCe,GAAe,kBAAMC,YAAYF,KCNxCG,GAAoB,SAACC,EAAmCf,GAC5D,IAAMgB,EAAuB,kBAARD,EAA0B,WAAa,SAC5D,MAAM,GAAN,OLAkC,+BKAlC,0BAAgDA,EAAhD,YAAuDC,EAAvD,YAAuEhB,EAAvE,mBAAuFiB,sJAAYC,uBAG/FC,GAA6B,SAACC,GAClC,MAAO,CACLC,OAAQD,EAAgB,aACxBE,KAAMF,EAAgB,aAQpBG,GAA8B,iDAAG,WAAOC,GAAP,iGAClBA,EAASC,OADS,cAC/BA,EAD+B,yBAENA,EALXC,YAAYC,IAAIR,KAGC,2CAAH,sDAKvBS,GAAM,iDAAG,WAAO5B,GAAP,iGACG6B,MAAMf,GAAkB,gBAAiBd,IAD5C,UAEO,OADrBwB,EADc,QAEJM,OAFI,iCAGEP,GAA+BC,GAHjC,yBAGfO,UAHe,KAG4CC,WAAW,GAHvD,6BAIhB,CAACA,WAAW,GAJI,mFAAH,sDAebC,GAA8B,iDAAG,WAAOT,GAAP,iGAClBA,EAASC,OADS,cAC/BA,EAD+B,yBAP9B,CACLS,SAF+BC,EAUAV,GARTW,QACtBC,YAAaF,EAAaG,YAC1BC,qBAAsBJ,EAAaK,uBAIA,iCARL,IAACL,IAQI,OAAH,sDAKvBM,GAAQ,iDAAG,WAAOzC,GAAP,iGACC6B,MAAMf,GAAkB,WAAYd,IADrC,UAEK,OADrBwB,EADgB,QAENM,OAFM,iCAGFG,GAA+BT,GAH7B,yBAGjBkB,QAHiB,KAGwCV,WAAW,GAHnD,6BAIlB,CAACA,WAAW,GAJM,mFAAH,sDC7CfW,GAAG,SAAG,GAAI,GACVC,GAAG,SAAG,GAAI,G,QCIVC,GAAOC,IAAOC,IAAV,4BAGJC,GAAOF,IAAOG,GAAV,4BAGJC,GAAwBJ,IAAOC,IAAV,4BAGrBI,GAA6BL,IAAOM,KAAV,uEAK1BC,GAAuBP,IAAOC,IAAV,+CASbO,GAAoC,SAAC,GAA0B,IDxBjCC,ECwBSC,EAAuB,EAAvBA,QAASd,EAAc,EAAdA,QAC3D,OACE,gBAACG,GAAD,WACE,eAACG,GAAD,UACGQ,EAAQlC,OAEX,gBAAC4B,GAAD,WACE,eAACC,GAAD,uBAGCT,EAAQR,SAAW,eAEtB,gBAACgB,GAAD,WACE,eAACC,GAAD,qCAGCT,EAAQH,sBDxC0BgB,ECwCwBE,OAAOf,EAAQH,sBDvC5EgB,GAASZ,GACL,GAAN,OAAUe,KAAKC,MAAMJ,EAAMZ,IAA3B,QAEOY,GAASX,GACV,GAAN,OAAUc,KAAKC,MAAMJ,EAAMX,IAA3B,QAEKgB,OAAOL,ICiC2F,eAErG,eAACF,GAAD,UACGX,EAAQL,aAAe,8BChC1BQ,GAAOC,IAAOC,IAAV,iDAIJc,GAAkBf,IAAOC,IAAV,oDAWRe,GAAc,WACzB,IAAQC,EAAiBC,cAAjBD,aACFlE,EAAYe,KAClB,EAA8BqD,oBAAS,GAAvC,oBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,qBAA9B,oBAAOvB,EAAP,KAAgB0B,EAAhB,KAEMZ,EAbW,SAAC3D,EAAsBkE,GACxC,GAAIA,GAAgBlE,EAAUwE,OAAS,EACrC,OAAOxE,EAAU4D,OAAOM,IAWVO,CAAWzE,EAAWkE,GAEhCQ,EAAcC,sBAAW,iDAAC,WAAOnD,GAAP,wFAC9B8C,GAAW,GADmB,SAET1B,GAASpB,GAFA,QAExBoD,EAFwB,QAGnBzC,UACToC,EAAWK,EAAO/B,SAGlBgC,MAAM,kEAERP,GAAW,GATmB,2CAAD,sDAU5B,IAQH,OANAQ,qBAAU,WACJnB,GACFe,EAAYf,EAAQnC,UAErB,CAACmC,EAASe,IAGX,gBAAC,GAAD,WACE,eAACV,GAAD,UACE,eAACe,GAAA,EAAD,CAAQC,QAAQ,YAAYC,UAAWC,IAAMC,GAAI7F,EAAjD,uBAID+E,GACC,eAACe,GAAA,EAAD,KAEAf,GACA,eAAC,GAAD,CACEV,QAASA,EACTd,QAASA,QCjEbG,GAAOC,IAAOoC,OAAV,kNTDmB,MSQN7F,GAKjB8F,GAAYrC,IAAOC,IAAV,qFTZW,KSkBbqC,GAAa,WACxB,OACE,eAAC,GAAD,UACE,eAACD,GAAD,uC,oBCrBOE,GAAkB,SAACpF,GAAD,MAAyB,CAAEqF,KAAM/F,EAAmBU,Y,4DCa7EsF,GAAiBzC,YAAO0C,KAAP1C,CAAH,+CXFP,WWMA2C,GAAgD,SAAC,GAAkC,IAAhCjC,EAA+B,EAA/BA,QAASpD,EAAsB,EAAtBA,MAAOsF,EAAe,EAAfA,SAC9E,OACE,eAACH,GAAD,CACEI,gBAAc,EACdC,gBAAc,EACdC,gBACE,eAACC,GAAA,EAAD,CACE,aAAW,SACXC,QAAS,kBAAML,KAFjB,SAIE,eAAC,KAAD,MARN,SAYE,eAACM,GAAA,EAAD,CAAgBlB,UAAWC,IAAMC,GAAE,UAAK5F,EAAL,YAAqBgB,GAAxD,SACE,eAAC6F,GAAA,EAAD,CAAcC,QAAO,UAAK1C,EAAQnC,OAAb,cAAyBmC,EAAQlC,aC5BxDuB,GAAOC,IAAOC,IAAV,4BAGGoD,GAAoB,WAC/B,IAAMC,EAAWC,cACXxG,EAAYe,KAEZ0F,EAA4B9B,uBAAY,SAACpE,GAC7CgG,EFTgE,CAAEd,KAAM7F,EAAuBQ,QESlE,CAAEG,aAC9B,CAACgG,IAEJ,OACE,eAAC,GAAD,UACE,gBAACG,GAAA,EAAD,WAEyB,IAArB1G,EAAUwE,QACR,yDAGHxE,EAAU8B,KAAI,SAAC6B,EAASpD,GAAV,OACb,eAAC,GAAD,CAEEoD,QAASA,EACTpD,MAAOA,EACPsF,SAAU,kBAAMY,EAA0BlG,KAHrCoD,EAAQnC,iBC1BnBwB,GAAOC,IAAOC,IAAV,gDAQGyD,GAA4B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,SAC1C,OACE,eAAC,GAAD,UACGA,KCTD5D,GAAOC,IAAOC,IAAV,4BAGG2D,GAAgB,WAC3B,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,6BAGA,eAAC,GAAD,Q,iDCHA7D,GAAOC,IAAOC,IAAV,4BAGG4D,GAAkB,WAC7B,IAAMP,EAAWC,cACjB,EAA8CpC,mBAAS,IAAvD,oBAAO2C,EAAP,KAAwBC,EAAxB,KAEMC,EAAkBtC,sBAAYuC,oBAAQ,iDAAC,WAAO/G,GAAP,oFAC3CoG,ELhB0C,CAAEd,KAAMhG,EAAWW,QKgB3CD,KACdA,EAFuC,gCAGpB4B,GAAO5B,GAHa,QAGnCyE,EAHmC,QAI9BzC,UACToE,EAASf,GAAgBZ,EAAO1C,YAGhC2C,MAAM,gEARiC,2CAAD,sDAWzC,KAAM,CAAC0B,IAQV,OANAzB,qBAAU,WACJiC,GACFE,EAAgBF,KAEjB,CAACE,EAAiBF,IAGnB,eAAC,GAAD,UACE,eAACI,GAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,eACNrC,QAAQ,WACRsC,WAAY,CACVC,eACE,eAACC,GAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,eAAC,KAAD,OAINC,SAAU,SAACC,GAAD,OAAgDX,EAAmBW,EAAMC,cAAclE,a,oBCtC5FmE,GAA8C,SAAC,GAAwB,IAAtBlE,EAAqB,EAArBA,QAASmE,EAAY,EAAZA,MACrE,OACE,eAACnC,GAAA,EAAD,CACEI,gBAAc,EACdC,gBACE,eAACC,GAAA,EAAD,CACE,aAAW,MACXC,QAAS,kBAAM4B,KAFjB,SAIE,eAAC,KAAD,MAPN,SAWE,eAAC1B,GAAA,EAAD,CAAcC,QAAO,UAAK1C,EAAQnC,OAAb,cAAyBmC,EAAQlC,WCftDuB,GAAOC,IAAOC,IAAV,4BAOG6E,GAAmB,WAC9B,IAAMxB,EAAWC,cACXrG,EbfsBa,YAAYJ,IagBlCZ,EAAYe,KACZhB,Ebd6BiB,YAAYH,IagBzCmH,EAAuBrD,uBAAY,SAAChB,IAVX,SAAC3D,EAAsB2D,GACtD,OAAO3D,EAAUiI,MAAK,SAACC,GAAD,OAAsBA,EAAiB1G,SAAWmC,EAAQnC,UAUzE2G,CAAyBnI,EAAW2D,GACvC4C,EPnB+C,CAAEd,KAAM9F,EAAkBS,QOmBjDuD,IAExBkB,MAAM,6DAEP,CAAC0B,EAAUvG,IAEd,OACE,gBAAC,GAAD,WACGG,GACC,gBAAC,GAAD,8BACmBJ,EAAayE,UAGlC,eAACkC,GAAA,EAAD,UACG3G,EAAa+B,KAAI,SAAC6B,GAAD,OAChB,eAAC,GAAD,CAEEA,QAASA,EACTmE,MAAO,kBAAME,EAAqBrE,KAF7BA,EAAQnC,iBCpCnBwB,GAAOC,IAAOC,IAAV,4BAGJkF,GAAuBnF,IAAOC,IAAV,oDAIbmF,GAAa,WACxB,OACE,gBAAC,GAAD,WACE,eAACD,GAAD,UACE,eAAC,GAAD,MAEF,eAAC,GAAD,QCXAE,GAAgBrF,YAAOsF,KAAPtF,CAAH,4BAGbD,GAAOC,IAAOC,IAAV,wUAINoF,GAImB9I,EAEjB8I,GAGAA,IAMAE,GAAmBvF,IAAOC,IAAV,uHAIC1D,GAKViJ,GAAc,WACzB,OACE,gBAAC,GAAD,WACE,eAACD,GAAD,UACE,eAAC,GAAD,MAEF,eAACF,GAAD,CAAeI,YAAY,aAAaC,UAAQ,IAChD,eAACL,GAAD,CAAeI,YAAY,WAAWC,UAAQ,IAC9C,eAACH,GAAD,UACE,eAAC,GAAD,UCrCFI,GAAO3F,IAAOC,IAAV,uFpBNgB,KoBYb2F,GAAU,WACrB,OACE,gBAAC,IAAD,CAAUrI,MAAOA,EAAjB,UACE,eAAC,GAAD,IACA,eAACoI,GAAD,UACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOE,KAAMxJ,EAAWyJ,QAAS,eAAC,GAAD,MACjC,eAAC,IAAD,CAAOD,KAAI,UAAKvJ,EAAL,kBAAmCwJ,QAAS,eAAC,GAAD,eChBjEC,IAAOC,SAEMC,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACH,eAAC,IAAMC,WAAP,UACE,eAAC,IAAD,UACE,eAAC,GAAD,W","file":"static/js/main.807264b2.chunk.js","sourcesContent":["export const ROOT_PATH = '/startup-house-task/';\r\nexport const DETAILS_PATH = `${ROOT_PATH}details`;\r\n\r\nexport const HEADER_HEIGHT = 60;\r\nexport const MAIN_WIDTH = 1000;\r\n\r\nexport const ALPHAVANTAGE_API_URL = 'https://www.alphavantage.co/';\r\n\r\nexport const RWD_BREAKPOINTS = {\r\n  1: 959,\r\n  2: 839,\r\n  3: 599,\r\n};\r\n\r\nexport const COLORS = {\r\n  lightGrey: '#F2F2F2',\r\n};\r\n","export const SET_QUERY = 'SET_QUERY';\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT';\n\nexport const ADD_TO_PORTFOLIO = 'ADD_TO_PORTFOLIO';\nexport const REMOVE_FROM_PORTFOLIO = 'REMOVE_FROM_PORTFOLIO';\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { Company } from '../types';\r\nimport { ADD_TO_PORTFOLIO, REMOVE_FROM_PORTFOLIO, SET_QUERY, SET_SEARCH_RESULT } from './actionTypes';\r\n\r\nexport interface StoreState {\r\n  query?: string,\r\n  searchResult: Company[],\r\n  portfolio: Company[],\r\n}\r\n\r\nexport const initialState: StoreState = {\r\n  searchResult: [],\r\n  portfolio: [],\r\n};\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  {\r\n    [SET_QUERY]: (\r\n      state: StoreState,\r\n      resp: {\r\n        payload: string,\r\n      }\r\n    ) => {\r\n      return {\r\n        ...state,\r\n        query: resp.payload,\r\n      };\r\n    },\r\n    [SET_SEARCH_RESULT]: (\r\n      state: StoreState,\r\n      resp: {\r\n        payload: Company[],\r\n      }\r\n    ) => {\r\n      return {\r\n        ...state,\r\n        searchResult: resp.payload,\r\n      };\r\n    },\r\n    [ADD_TO_PORTFOLIO]: (\r\n      state: StoreState,\r\n      resp: {\r\n        payload: Company,\r\n      }\r\n    ) => {\r\n      return {\r\n        ...state,\r\n        portfolio: [...state.portfolio, resp.payload],\r\n      };\r\n    },\r\n    [REMOVE_FROM_PORTFOLIO]: (\r\n      state: StoreState,\r\n      resp: {\r\n        payload: { index: number },\r\n      }\r\n    ) => {\r\n      const newPortfolio = [...state.portfolio];\r\n      newPortfolio.splice(resp.payload.index, 1);\r\n      return {\r\n        ...state,\r\n        portfolio: newPortfolio,\r\n      };\r\n    },\r\n  },\r\n);\r\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'\nimport { reducer } from './reducer';\n\n// todo use configureStore\nexport const store = createStore(\n  reducer,\n  applyMiddleware(thunkMiddleware),\n);\n\nexport type RootState = ReturnType<typeof reducer>\n","import { useSelector } from 'react-redux';\nimport { RootState } from './store';\n\nconst selectQuery = (state: RootState) => state.query;\nexport const useQuery = () => useSelector(selectQuery);\n\nconst selectSearchResult = (state: RootState) => state.searchResult;\nexport const useSearchResult = () => useSelector(selectSearchResult);\n\nconst selectPortfolio = (state: RootState) => state.portfolio;\nexport const usePortfolio = () => useSelector(selectPortfolio);\n","import { ALPHAVANTAGE_API_URL} from '../constants';\nimport { Company, CompanyDetails } from '../types';\nimport { OverviewResponseJson, SearchBestMatchesItem, SearchResponseJson, SearchResult, OverviewResult} from './alphavantageTypes';\n\nconst createApiQueryUrl = (fun: 'SYMBOL_SEARCH' | 'OVERVIEW', query: string) => {\n  const queryArgName = fun === 'SYMBOL_SEARCH' ? 'keywords' : 'symbol';\n  return `${ALPHAVANTAGE_API_URL}query?function=${fun}&${queryArgName}=${query}&apikey=${process.env.ALPHAVANTAGE_API_KEY}`;\n};\n\nconst parseSearchBestMatchesItem = (bestMatchesItem: SearchBestMatchesItem): Company => {\n  return {\n    symbol: bestMatchesItem['1. symbol'],\n    name: bestMatchesItem['2. name'],\n  };\n};\n\nconst parseSearchResponseJson = (responseJson: SearchResponseJson): Company[] => {\n  return responseJson.bestMatches.map(parseSearchBestMatchesItem) ;\n};\n\nconst getCompaniesFromSearchResponse = async (response: Response): Promise<Company[]> => {\n  const json = await response.json() as SearchResponseJson;\n  return parseSearchResponseJson(json);\n};\n\nexport const search = async (query: string): Promise<SearchResult> => {\n  const response = await fetch(createApiQueryUrl('SYMBOL_SEARCH', query));\n  return response.status === 200\n    ? {companies: await getCompaniesFromSearchResponse(response), isSuccess: true}\n    : {isSuccess: false};\n};\n\nconst parseOverviewResponseJson = (responseJson: OverviewResponseJson): CompanyDetails => {\n  return {\n    address: responseJson.Address,\n    description: responseJson.Description,\n    marketCapitalization: responseJson.MarketCapitalization,\n  };\n};\n\nconst getDetailsFromOverviewResponse = async (response: Response): Promise<CompanyDetails> => {\n  const json = await response.json() as OverviewResponseJson;\n  return parseOverviewResponseJson(json);\n};\n\nexport const overview = async (query: string): Promise<OverviewResult> => {\n  const response = await fetch(createApiQueryUrl('OVERVIEW', query));\n  return response.status === 200\n    ? {details: await getDetailsFromOverviewResponse(response), isSuccess: true}\n    : {isSuccess: false};\n};\n","const BIL = 10**9;\r\nconst MIL = 10**6;\r\n\r\n// Simple and rough formatting\r\nexport const formatMarketCapitalization = (value: number) => {\r\n  if (value >= BIL) {\r\n    return `${Math.floor(value/BIL)} bln`;\r\n  }\r\n  else if (value >= MIL) {\r\n    return `${Math.floor(value/MIL)} mln`;\r\n  }\r\n  return String(value);\r\n};\r\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport { Company, CompanyDetails } from '../../types';\nimport { formatMarketCapitalization } from '../../utils/general';\n\nconst Root = styled.div`\n`;\n\nconst Name = styled.h2`\n`;\n\nconst SmallDetailsContainer = styled.div`\n`;\n\nconst SmallDetailsContainerLabel = styled.span`\n  font-weight: 700;\n  margin-right: 5px;\n`;\n\nconst DescriptionContainer = styled.div`\n  margin: 20px 0;\n`;\n\ninterface DetailsMainProps {\n  company: Company,\n  details: CompanyDetails,\n}\n\nexport const DetailsMain: FC<DetailsMainProps> = ({ company, details }) => {\n  return (\n    <Root>\n      <Name>\n        {company.name}\n      </Name>\n      <SmallDetailsContainer>\n        <SmallDetailsContainerLabel>\n          Address:\n        </SmallDetailsContainerLabel>\n        {details.address || 'NOT FOUND'}\n      </SmallDetailsContainer>\n      <SmallDetailsContainer>\n        <SmallDetailsContainerLabel>\n          Market Capitalization:\n        </SmallDetailsContainerLabel>\n        {details.marketCapitalization ? formatMarketCapitalization(Number(details.marketCapitalization)) : 'NOT FOUND'}\n      </SmallDetailsContainer>\n      <DescriptionContainer>\n        {details.description || 'DESCRIPTION NOT FOUND'}\n      </DescriptionContainer>\n    </Root>\n  );\n};\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Link, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ROOT_PATH } from '../../constants';\nimport { usePortfolio } from '../../redux/selectors';\nimport { Company, CompanyDetails } from '../../types';\nimport { overview } from '../../utils/alphavantage';\nimport { DetailsMain } from './DetailsMain';\n\ntype DetailsParams = {\n  companyIndex: string,\n};\n\nconst Root = styled.div`\n  margin-top: 30px;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst getCompany = (portfolio: Company[], companyIndex?: string) => {\n  if (companyIndex && portfolio.length > 0) {\n    return portfolio[Number(companyIndex)];\n  }\n  return undefined;\n};\n\nexport const Details: FC = () => {\n  const { companyIndex } = useParams<DetailsParams>();\n  const portfolio = usePortfolio();\n  const [loading, setLoading] = useState(true);\n  const [details, setDetails] = useState<CompanyDetails>();\n\n  const company = getCompany(portfolio, companyIndex);\n\n  const getOverview = useCallback(async (symbol: string) => {\n    setLoading(true);\n    const result = await overview(symbol);\n    if (result.isSuccess) {\n      setDetails(result.details);\n    }\n    else {\n      alert('Unknown error while fetching company details. Please try later');\n    }\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    if (company) {\n      getOverview(company.symbol);\n    }\n  }, [company, getOverview]);\n\n  return (\n    <Root>\n      <ButtonContainer>\n        <Button variant=\"contained\" component={Link} to={ROOT_PATH}>\n          Go Back\n        </Button>\n      </ButtonContainer>\n      {loading && (\n        <CircularProgress />\n      )}\n      {!loading && (\n        <DetailsMain\n          company={company as Company}\n          details={details as CompanyDetails}\n        />\n      )}\n    </Root>\n  );\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport { HEADER_HEIGHT, MAIN_WIDTH, RWD_BREAKPOINTS } from '../constants';\n\nconst Root = styled.header`\n  border-bottom: solid 1px black;\n  font-size: 30px;\n  font-family: monospace;\n  height: ${HEADER_HEIGHT}px;\n  line-height: ${HEADER_HEIGHT}px;\n\n  @media (max-width: ${RWD_BREAKPOINTS[3]}px) {\n    font-size: 20px;\n  }\n`;\n\nconst Container = styled.div`\n  max-width: ${MAIN_WIDTH}px;\n  padding: 0 20px;\n  margin: auto;\n`;\n\nexport const Header: FC = () => {\n  return (\n    <Root>\n      <Container>\n        SDH Frontend Homework\n      </Container>\n    </Root>\n  );\n};\n","import { SET_QUERY, SET_SEARCH_RESULT, ADD_TO_PORTFOLIO, REMOVE_FROM_PORTFOLIO } from './actionTypes';\nimport { Company } from '../types';\n\nexport const setQuery = (payload: string) => ({ type: SET_QUERY, payload });\nexport const setSearchResult = (payload: Company[]) => ({ type: SET_SEARCH_RESULT, payload });\n\nexport const addToPortfolio = (payload: Company) => ({ type: ADD_TO_PORTFOLIO, payload });\nexport const removeFromPortfolio = (payload: { index: number }) => ({ type: REMOVE_FROM_PORTFOLIO, payload });\n","import React, { FC } from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { COLORS, DETAILS_PATH } from '../../../constants';\r\nimport { Company } from '../../../types';\r\n\r\nexport interface CompaniesListItemProps {\r\n  company: Company,\r\n  index: number,\r\n  onRemove: () => void,\r\n}\r\n\r\nconst StyledListItem = styled(ListItem)`\r\n  background: ${COLORS.lightGrey};\r\n`;\r\n\r\nexport const CompaniesListItem: FC<CompaniesListItemProps> = ({ company, index, onRemove }) => {\r\n  return (\r\n    <StyledListItem\r\n      disablePadding\r\n      disableGutters\r\n      secondaryAction={\r\n        <IconButton\r\n          aria-label=\"remove\"\r\n          onClick={() => onRemove()}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      }\r\n    >\r\n      <ListItemButton component={Link} to={`${DETAILS_PATH}/${index}`}>\r\n        <ListItemText primary={`${company.symbol} - ${company.name}`} />\r\n      </ListItemButton>\r\n    </StyledListItem>\r\n  );\r\n};\r\n","import React, { FC, useCallback } from 'react';\r\nimport List from '@mui/material/List';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { removeFromPortfolio } from '../../../redux/actions';\r\nimport { usePortfolio } from '../../../redux/selectors';\r\nimport { CompaniesListItem } from './CompaniesListItem';\r\n\r\nconst Root = styled.div`\r\n`;\r\n\r\nexport const CompaniesList: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const portfolio = usePortfolio();\r\n\r\n  const handleRemoveFromPortfolio = useCallback((index: number) => {\r\n    dispatch(removeFromPortfolio({ index }));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Root>\r\n      <List>\r\n        {\r\n          portfolio.length === 0 && (\r\n            <div>No items in portfolio</div>\r\n          )\r\n        }\r\n        {portfolio.map((company, index) => (\r\n          <CompaniesListItem\r\n            key={company.symbol}\r\n            company={company}\r\n            index={index}\r\n            onRemove={() => handleRemoveFromPortfolio(index)}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Root>\r\n  );\r\n};\r\n","import React, { FC, ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Root = styled.div`\r\n  font-size: 20px;\r\n`;\r\n\r\ninterface HeadingProps {\r\n  children?: ReactNode,\r\n}\r\n\r\nexport const Heading: FC<HeadingProps> = ({ children}) => {\r\n  return (\r\n    <Root>\r\n      {children}\r\n    </Root>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { CompaniesList } from './CompaniesList';\r\nimport { Heading } from '../common/Heading';\r\n\r\nconst Root = styled.div`\r\n`;\r\n\r\nexport const Portfolio: FC = () => {\r\n  return (\r\n    <Root>\r\n      <Heading>\r\n        Your Portfolio\r\n      </Heading>\r\n      <CompaniesList></CompaniesList>\r\n    </Root>\r\n  );\r\n};\r\n","import React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport { debounce } from 'lodash';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { setQuery, setSearchResult } from '../../redux/actions';\r\nimport { search } from '../../utils/alphavantage';\r\nimport { Company } from '../../types';\r\n\r\nconst Root = styled.div`\r\n`;\r\n\r\nexport const SearchInput: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [searchInputText, setSearchInputText] = useState('');\r\n\r\n  const searchCompanies = useCallback(debounce(async (query: string) => {\r\n    dispatch(setQuery(query));\r\n    if (query) {\r\n      const result = await search(query);\r\n      if (result.isSuccess) {\r\n        dispatch(setSearchResult(result.companies as Company[]));\r\n      }\r\n      else {\r\n        alert('Unknown error while fetching search result. Please try later');\r\n      }\r\n    }\r\n  }, 300), [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (searchInputText) {\r\n      searchCompanies(searchInputText);\r\n    }\r\n  }, [searchCompanies, searchInputText]);\r\n\r\n  return (\r\n    <Root>\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        label=\"Company Name\"\r\n        variant=\"outlined\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => setSearchInputText(event.currentTarget.value)}\r\n      />\r\n    </Root>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { Company } from '../../../types';\r\n\r\nexport interface SearchResultItemProps {\r\n  company: Company,\r\n  onAdd: () => void,\r\n}\r\n\r\nexport const SearchResultItem: FC<SearchResultItemProps> = ({ company, onAdd }) => {\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      secondaryAction={\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          onClick={() => onAdd()}\r\n        >\r\n          <AddIcon />\r\n        </IconButton>\r\n      }\r\n    >\r\n      <ListItemText primary={`${company.symbol} - ${company.name}`} />\r\n    </ListItem>\r\n  );\r\n};\r\n","import React, { FC, useCallback } from 'react';\r\nimport List from '@mui/material/List';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { addToPortfolio } from '../../../redux/actions';\r\nimport { usePortfolio, useQuery, useSearchResult } from '../../../redux/selectors';\r\nimport { Company } from '../../../types';\r\nimport { SearchResultItem } from './SearchResultItem';\r\nimport { Heading } from '../../common/Heading';\r\n\r\nconst Root = styled.div`\r\n`;\r\n\r\nconst portfolioIncludesCompany = (portfolio: Company[], company: Company) => {\r\n  return portfolio.find((portfolioCompany) => portfolioCompany.symbol === company.symbol);\r\n};\r\n\r\nexport const SearchResult: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const query = useQuery();\r\n  const portfolio = usePortfolio();\r\n  const searchResult = useSearchResult();\r\n\r\n  const handleAddToPortfolio = useCallback((company: Company) => {\r\n    if (!portfolioIncludesCompany(portfolio, company)) {\r\n      dispatch(addToPortfolio(company));\r\n    } else {\r\n      alert('You cannot add the same company twice to your portfolio');\r\n    }\r\n  }, [dispatch, portfolio]);\r\n\r\n  return (\r\n    <Root>\r\n      {query && (\r\n        <Heading>\r\n          Search Results: {searchResult.length}\r\n        </Heading>\r\n      )}\r\n      <List>\r\n        {searchResult.map((company) => (\r\n          <SearchResultItem\r\n            key={company.symbol}\r\n            company={company}\r\n            onAdd={() => handleAddToPortfolio(company)}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Root>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { SearchInput } from './SearchInput';\r\nimport { SearchResult } from './SearchResult';\r\n\r\nconst Root = styled.div`\r\n`;\r\n\r\nconst SearchInputContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Search: FC = () => {\r\n  return (\r\n    <Root>\r\n      <SearchInputContainer>\r\n        <SearchInput />\r\n      </SearchInputContainer>\r\n      <SearchResult />\r\n    </Root>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\nimport Divider from '@mui/material/Divider';\nimport styled from 'styled-components';\nimport { RWD_BREAKPOINTS } from '../constants';\nimport { Portfolio } from './Portfolio';\nimport { Search } from './Search';\n\nconst StyledDivider = styled(Divider)`\n`;\n\nconst Root = styled.div`\n  margin-top: 30px;\n  display: flex;\n  \n  ${StyledDivider}[orientation=\"horizontal\"] {\n    display: none;\n  }\n\n  @media (max-width: ${RWD_BREAKPOINTS[2]}px) {\n    flex-direction: column;\n    ${StyledDivider}[orientation=\"vertical\"] {\n      display: none;\n    }\n    ${StyledDivider}[orientation=\"horizontal\"] {\n      display: block;\n    }\n  }\n`;\n\nconst SectionContainer = styled.div`\n  padding: 0 20px;\n  flex: 1;\n\n  @media (max-width: ${RWD_BREAKPOINTS[2]}px) {\n    padding: 20px 0;\n  }\n`;\n\nexport const Landing: FC = () => {\n  return (\n    <Root>\n      <SectionContainer>\n        <Search />\n      </SectionContainer>\n      <StyledDivider orientation=\"horizontal\" flexItem />\n      <StyledDivider orientation=\"vertical\" flexItem />\n      <SectionContainer>\n        <Portfolio />\n      </SectionContainer>\n    </Root>\n  );\n};\n","import React, { FC } from 'react';\nimport {Provider} from 'react-redux';\nimport { Routes, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ROOT_PATH, DETAILS_PATH, MAIN_WIDTH } from '../constants';\nimport { store } from '../redux/store';\nimport { Details } from './Details';\nimport { Header } from './Header';\nimport { Landing } from './Landing';\n\nconst Main = styled.div`\n  max-width: ${MAIN_WIDTH}px;\n  padding: 0 20px;\n  margin: 0 auto;\n`;\n\nexport const App: FC = () => {\n  return (\n    <Provider store={store}>\n      <Header />\n      <Main>\n        <Routes>\n          <Route path={ROOT_PATH} element={<Landing />} />\n          <Route path={`${DETAILS_PATH}/:companyIndex`} element={<Details />} />\n        </Routes>\n      </Main>\n    </Provider>\n  );\n};\n","import dotenv from 'dotenv';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './components/App';\n\ndotenv.config();\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}